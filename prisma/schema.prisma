// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hostel {
  id      String @id @default(dbgenerated("uuid_generate_v4()"))
  name    String @db.VarChar(50) @unique
  floors  Floor[]
  faculties Faculty[]
}

model Floor {
  id        String @id @default(dbgenerated("uuid_generate_v4()"))
  name      String @db.VarChar(50)
  hostel    Hostel @relation(fields: [hostelId], references: [id])
  hostelId  String
  rooms     Room[]
}

model Room {
  id        String @id @default(dbgenerated("uuid_generate_v4()"))
  name      String @db.VarChar(50)
  floor     Floor  @relation(fields: [floorId], references: [id])
  floorId   String
  places    Place[]
}

model Place {
  id        String @id @default(dbgenerated("uuid_generate_v4()"))
  name      String @db.VarChar(50)
  room      Room   @relation(fields: [roomId], references: [id])
  roomId    String
  users     Lodger[]
}

model Faculty {
  id      String @id @default(dbgenerated("uuid_generate_v4()"))
  name    String @db.VarChar(50) @unique
  hostels Hostel[]
  groups Group[]
}

model Group {
  id      String  @id @default(dbgenerated("uuid_generate_v4()"))
  name    String  @db.VarChar(50) @unique
  faculty Faculty @relation(fields: [facultyId], references: [id])
  facultyId String
  users   Lodger[]
}

model Country {
  id      String @id @default(dbgenerated("uuid_generate_v4()"))
  name    String @db.VarChar(50) @unique
  users   Lodger[]
}

model Lodger {
  id            String @id @default(dbgenerated("uuid_generate_v4()"))
  login         String @db.VarChar(50) @unique
  password      String @db.VarChar(50) @default(dbgenerated("md5(random()::text)"))
  first_name    String @db.VarChar(50)
  last_name     String @db.VarChar(50)
  patronomic    String? @db.VarChar(50)
  group         Group? @relation(fields: [groupId], references: [id])
  groupId       String?
  place         Place? @relation(fields: [placeId], references: [id])
  placeId       String?
  phone         String? @db.VarChar(11)
  contract_id   Int?
  contract_date DateTime?
  country       Country? @relation(fields: [countryId], references: [id])
  countryId     String?
}